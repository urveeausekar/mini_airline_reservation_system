create database ars;

use ars;

create table user(
user_id varchar(50),
firstname varchar(50) not null,
middle name varchar(50),
lastname varchar(50) not null,
email varchar(50) not null,
phone_no  integer(10) not null,
address varchar(500),
city varchar(100) not null,
country varchar(100) not null,
primary key user_id);

create table userownscard(
user_id varchar(50),
card_number integer(16) not null,
type varchar(50),
expiry_date date,
primary key (card_number),
foreign key (user_id) references user(user_id) on delete cascade);

create table userbooksflight(
user_id varchar(50),
plane_id varchar(50),
date date not null,
src varchar(100),
dest varchar(100),
src_country varchar(100),
dest_country varchar(100),
dept_time time,
primary key( user_id, plane_id, date, src, dest, src_country, dest_country, dept_time),
foreign key (plane_id, date, src, dest, src_country, dest_country, dept_time) references flight(plane_id,  date, src, dest, src_country, dest_country, dept_time) on delete cascade);

create table flight(
plane_id varchar(50),
date date not null,
src varchar(100),
dest varchar(100),
src_country varchar(100),
dest_country varchar(100),
dept_time time,
arr_time time,
no_of_passengers_business integer,
no_of_passengers_economy integer,
cost_business float(7,3),
cost_economy float(7, 3),
primary key (plane_id, date, src, dest, src_country, dest_country, dept_time),
foreign key(plane_id) references airplane(plane_id) on delete set null,
foreign key (src,dest, src_country, dest_country) references airport(a_id, a_id, country, country) on delete set null
check (dept_time < arr_time) );

create table airplane(
plane_id varchar(50) not null,
tot_capacity integer,
business_seats integer,
economy_seats integer,
primary key (plane_id));

create table airport(
a_id varchar(50),
a_name varchar(100),
city varchar(100),
country varchar(100),
primary key (a_id));

create table route_via(
plane_id varchar(50),
a_id varchar(50),
seq_no integer,
time_in time,
time_out time,
foreign key (a_id) references airport(a_id) on delete set null ,
foreign key (plane_id) references airplane(plane_id) on delete cascade,
check (time_in < time_out));

delimiter $

CREATE TRIGGER inv_times BEFORE INSERT ON route_via
  FOR EACH ROW
    BEGIN
      IF(new.time_in > time_out) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "incorrect timings";
      END IF;
    END;
    
CREATE TRIGGER inv_times_2 BEFORE INSERT ON flight
  FOR EACH ROW
    BEGIN
      IF(new.dept_time > arr_time) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "incorrect timings";
      END IF;
    END;

delimiter ;

create table password(
user_id varchar(50),
password_hash varchar(255),
primary key (user_id),
foreign key (user_id) references user(user_id));

create table admin(
admin_id varchar(50),
password_hash varchar(255),
primary key(admin_id));



 











